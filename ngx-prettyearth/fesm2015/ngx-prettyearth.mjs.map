{"version":3,"file":"ngx-prettyearth.mjs","sources":["../../../projects/ngx-prettyearth/src/lib/ngx-prettyearth.service.ts","../../../projects/ngx-prettyearth/src/lib/safe.pipe.ts","../../../projects/ngx-prettyearth/src/lib/ngx-prettyearth.component.ts","../../../projects/ngx-prettyearth/src/lib/ngx-prettyearth.module.ts","../../../projects/ngx-prettyearth/src/public-api.ts","../../../projects/ngx-prettyearth/src/ngx-prettyearth.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { create } from 'apisauce';\nimport { BehaviorSubject, interval, Observable, Subscription } from 'rxjs';\n\nexport interface IPrettyearth {\n  country: string;\n  image: string;\n  map: string;\n  region: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgxPrettyearthService {\n  private api = create({\n    baseURL:\n      'https://raw.githubusercontent.com/limhenry/earthview/master/earthview.json',\n    headers: { Accept: 'application/vnd.github.v3+json' },\n  });\n\n  private key: string = 'prettyearth';\n  public prettyearth!: BehaviorSubject<IPrettyearth>;\n\n  private timeInterval: Observable<number> | undefined;\n  private subscription: Subscription | undefined;\n\n  constructor() {\n    this.init();\n  }\n\n  private async init(): Promise<void> {\n    const item: IPrettyearth = JSON.parse(\n      localStorage.getItem(this.key) as string\n    ) as IPrettyearth;\n\n    this.prettyearth = new BehaviorSubject(item);\n\n    if (item) this.prettyearth.next(item);\n    else await this.call();\n  }\n\n  /**\n   * Call this func to set `prettyearth`.\n   */\n  public async call(): Promise<void> {\n    const { ok, data, problem, originalError } = await this.api.get('');\n    if (ok) {\n      const randomResponse: IPrettyearth = (data as Array<IPrettyearth>)[\n        this.getRandomInt(0, (data as Array<IPrettyearth>).length)\n      ] as IPrettyearth;\n      this.prettyearth.next(randomResponse);\n      localStorage.setItem(this.key, JSON.stringify(randomResponse));\n    } else {\n      console.error(problem, originalError?.toJSON());\n    }\n  }\n\n  /**\n   * Call this func to delete image from localStorage\n   */\n  public destroy(): void {\n    localStorage.removeItem(this.key);\n    this.subscription?.unsubscribe();\n    this.prettyearth.unsubscribe();\n  }\n\n  /**\n   * Interval to call `prettyearth`\n   * @param {number} time In miliseconds\n   * @default 1000 ms\n   */\n  public setInterval(timeInterval: number = 5000): void {\n    if (timeInterval >= 1000) {\n      this.subscription?.unsubscribe();\n      this.timeInterval = interval(timeInterval);\n      this.subscription = this.timeInterval.subscribe(async () => {\n        await this.call();\n      });\n    } else {\n      console.error(\n        'ERROR: Interval must be greater than or equal to 1000 milliseconds'\n      );\n    }\n  }\n\n  /**\n   * To stop the interval\n   */\n  public stopInterval(): void {\n    this.subscription?.unsubscribe();\n    this.timeInterval = undefined;\n  }\n\n  /**\n   * Returns a random integer between min (included) and max (excluded)\n   * @param {number} min\n   * @param {number} max\n   * @returns {number} number\n   */\n  private getRandomInt(min: number, max: number): number {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {\n  DomSanitizer,\n  SafeHtml,\n  SafeStyle,\n  SafeScript,\n  SafeUrl,\n  SafeResourceUrl,\n} from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safe',\n})\nexport class SafePipe implements PipeTransform {\n  constructor(protected sanitizer: DomSanitizer) {}\n\n  public transform(\n    value: any,\n    type: string\n  ): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n    switch (type) {\n      case 'html':\n        return this.sanitizer.bypassSecurityTrustHtml(value);\n      case 'style':\n        return this.sanitizer.bypassSecurityTrustStyle(value);\n      case 'script':\n        return this.sanitizer.bypassSecurityTrustScript(value);\n      case 'url':\n        return this.sanitizer.bypassSecurityTrustUrl(value);\n      case 'resourceUrl':\n        return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n      default:\n        throw new Error(`Invalid safe type specified: ${type}`);\n    }\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { IPrettyearth, NgxPrettyearthService } from './ngx-prettyearth.service';\n\n@Component({\n  selector: 'ngx-prettyearth',\n  template: `\n    <div class=\"containerImg\">\n      <picture>\n        <source\n          media=\"(max-width: 640px)\"\n          [srcset]=\"prettyearth?.getValue()?.image | safe: 'url'\"\n        />\n        <img\n          class=\"img\"\n          [src]=\"prettyearth?.getValue()?.image | safe: 'url'\"\n          [alt]=\"\n            prettyearth?.getValue()?.region +\n            (prettyearth?.getValue()?.region ? ' - ' : '') +\n            prettyearth?.getValue()?.country\n          \"\n        />\n      </picture>\n    </div>\n    <ng-content></ng-content>\n  `,\n  styles: [\n    `\n      :host {\n        margin: 0;\n        padding: 0;\n        z-index: -1;\n      }\n      .containerImg {\n        position: relative;\n        width: 100vw;\n        height: 100vh;\n      }\n      .img {\n        position: absolute;\n        display: inline-block;\n        width: 100%;\n        height: 100%;\n        border-style: none;\n        object-fit: cover;\n      }\n    `,\n  ],\n})\nexport class NgxPrettyearthComponent implements OnInit, OnDestroy {\n  public prettyearth!: BehaviorSubject<IPrettyearth>;\n\n  @Input() public interval: number | undefined;\n  @Output() public change: EventEmitter<IPrettyearth> = new EventEmitter();\n\n  constructor(private prettyearthService: NgxPrettyearthService) {\n    this.prettyearthService.prettyearth.subscribe(\n      (prettyearth: IPrettyearth): void => {\n        this.prettyearth = new BehaviorSubject(prettyearth);\n        this.change.emit(prettyearth);\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    if (this.interval) this.prettyearthService.setInterval(this.interval);\n    this.change.emit(this.prettyearthService.prettyearth.getValue());\n  }\n\n  ngOnDestroy(): void {\n    this.prettyearthService.destroy();\n  }\n\n  /**\n   * Get a random picture\n   */\n  public async getRandomPic(): Promise<void> {\n    await this.prettyearthService.call();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NgxPrettyearthComponent } from './ngx-prettyearth.component';\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n  declarations: [NgxPrettyearthComponent, SafePipe],\n  imports: [CommonModule],\n  exports: [NgxPrettyearthComponent],\n})\nexport class NgxPrettyearthModule {}\n","/*\n * Public API Surface of ngx-prettyearth\n */\n\nexport * from './lib/ngx-prettyearth.service';\nexport * from './lib/ngx-prettyearth.component';\nexport * from './lib/ngx-prettyearth.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;;;MAca,qBAAqB;IAahC;QAZQ,QAAG,GAAG,MAAM,CAAC;YACnB,OAAO,EACL,4EAA4E;YAC9E,OAAO,EAAE,EAAE,MAAM,EAAE,gCAAgC,EAAE;SACtD,CAAC,CAAC;QAEK,QAAG,GAAW,aAAa,CAAC;QAOlC,IAAI,CAAC,IAAI,EAAE,CAAC;KACb;IAEa,IAAI;;YAChB,MAAM,IAAI,GAAiB,IAAI,CAAC,KAAK,CACnC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAW,CACzB,CAAC;YAElB,IAAI,CAAC,WAAW,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;YAE7C,IAAI,IAAI;gBAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;gBACjC,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;SACxB;KAAA;;;;IAKY,IAAI;;YACf,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,aAAa,EAAE,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACpE,IAAI,EAAE,EAAE;gBACN,MAAM,cAAc,GAAkB,IAA4B,CAChE,IAAI,CAAC,YAAY,CAAC,CAAC,EAAG,IAA4B,CAAC,MAAM,CAAC,CAC3C,CAAC;gBAClB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBACtC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC;aAChE;iBAAM;gBACL,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,MAAM,EAAE,CAAC,CAAC;aACjD;SACF;KAAA;;;;IAKM,OAAO;;QACZ,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAClC,MAAA,IAAI,CAAC,YAAY,0CAAE,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;KAChC;;;;;;IAOM,WAAW,CAAC,eAAuB,IAAI;;QAC5C,IAAI,YAAY,IAAI,IAAI,EAAE;YACxB,MAAA,IAAI,CAAC,YAAY,0CAAE,WAAW,EAAE,CAAC;YACjC,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC;YAC3C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;gBAC9C,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;aACnB,CAAA,CAAC,CAAC;SACJ;aAAM;YACL,OAAO,CAAC,KAAK,CACX,oEAAoE,CACrE,CAAC;SACH;KACF;;;;IAKM,YAAY;;QACjB,MAAA,IAAI,CAAC,YAAY,0CAAE,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;KAC/B;;;;;;;IAQO,YAAY,CAAC,GAAW,EAAE,GAAW;QAC3C,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;KACtD;;kHAxFU,qBAAqB;sHAArB,qBAAqB,cAFpB,MAAM;2FAEP,qBAAqB;kBAHjC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;MCAY,QAAQ;IACnB,YAAsB,SAAuB;QAAvB,cAAS,GAAT,SAAS,CAAc;KAAI;IAE1C,SAAS,CACd,KAAU,EACV,IAAY;QAEZ,QAAQ,IAAI;YACV,KAAK,MAAM;gBACT,OAAO,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;YACvD,KAAK,OAAO;gBACV,OAAO,IAAI,CAAC,SAAS,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;YACxD,KAAK,QAAQ;gBACX,OAAO,IAAI,CAAC,SAAS,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC;YACzD,KAAK,KAAK;gBACR,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;YACtD,KAAK,aAAa;gBAChB,OAAO,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAAC,KAAK,CAAC,CAAC;YAC9D;gBACE,MAAM,IAAI,KAAK,CAAC,gCAAgC,IAAI,EAAE,CAAC,CAAC;SAC3D;KACF;;qGArBU,QAAQ;mGAAR,QAAQ;2FAAR,QAAQ;kBAHpB,IAAI;mBAAC;oBACJ,IAAI,EAAE,MAAM;iBACb;;;MC4CY,uBAAuB;IAMlC,YAAoB,kBAAyC;QAAzC,uBAAkB,GAAlB,kBAAkB,CAAuB;QAF5C,WAAM,GAA+B,IAAI,YAAY,EAAE,CAAC;QAGvE,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,SAAS,CAC3C,CAAC,WAAyB;YACxB,IAAI,CAAC,WAAW,GAAG,IAAI,eAAe,CAAC,WAAW,CAAC,CAAC;YACpD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC/B,CACF,CAAC;KACH;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,QAAQ;YAAE,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;KAClE;IAED,WAAW;QACT,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;KACnC;;;;IAKY,YAAY;;YACvB,MAAM,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;SACtC;KAAA;;oHA7BU,uBAAuB;wGAAvB,uBAAuB,wHA3CxB;;;;;;;;;;;;;;;;;;;GAmBT;2FAwBU,uBAAuB;kBA7CnC,SAAS;mBAAC;oBACT,QAAQ,EAAE,iBAAiB;oBAC3B,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;GAmBT;oBACD,MAAM,EAAE;wBACN;;;;;;;;;;;;;;;;;;;KAmBC;qBACF;iBACF;yGAIiB,QAAQ;sBAAvB,KAAK;gBACW,MAAM;sBAAtB,MAAM;;;MClDI,oBAAoB;;iHAApB,oBAAoB;kHAApB,oBAAoB,iBAJhB,uBAAuB,EAAE,QAAQ,aACtC,YAAY,aACZ,uBAAuB;kHAEtB,oBAAoB,YAHtB,CAAC,YAAY,CAAC;2FAGZ,oBAAoB;kBALhC,QAAQ;mBAAC;oBACR,YAAY,EAAE,CAAC,uBAAuB,EAAE,QAAQ,CAAC;oBACjD,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,OAAO,EAAE,CAAC,uBAAuB,CAAC;iBACnC;;;ACTD;;;;ACAA;;;;;;"}